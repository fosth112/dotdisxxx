@bot.command()
@commands.has_role("resetkey")  # ‡πÉ‡∏´‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞ Role "resetkey" ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ‡πÑ‡∏î‡πâ
async def rs(ctx, license_key: str):
    """‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á !rs <license_key> ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï HWID ‡∏ú‡πà‡∏≤‡∏ô KeyAuth"""
    try:
        # ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
        try:
            await ctx.message.delete()
        except discord.Forbidden:
            await ctx.send("‚ùå ‡∏ö‡∏≠‡∏ó‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏Ç‡∏≠‡∏á‡∏ö‡∏≠‡∏ó", delete_after=10)
            return  # ‡∏´‡∏¢‡∏∏‡∏î‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ñ‡πâ‡∏≤‡∏ö‡∏≠‡∏ó‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå

        # ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå
        reset_history = load_reset_history()

        # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ License Key ‡∏ô‡∏µ‡πâ‡πÄ‡∏Ñ‡∏¢‡∏ñ‡∏π‡∏Å‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
        now = datetime.utcnow()
        if license_key in reset_history:
            last_reset = datetime.fromisoformat(reset_history[license_key])
            if now - last_reset < timedelta(days=7):  # ‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏≠ 7 ‡∏ß‡∏±‡∏ô
                if "ASST" not in [role.name for role in ctx.author.roles]:  # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Role
                    await ctx.send(f"‚ùå ‡∏Ñ‡∏µ‡∏¢‡πå `{license_key}` ‡∏ñ‡∏π‡∏Å‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏≠‡∏≠‡∏µ‡∏Å {7 - (now - last_reset).days} ‡∏ß‡∏±‡∏ô", delete_after=10)
                    return

        # ‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠‡πÑ‡∏õ‡∏¢‡∏±‡∏á KeyAuth API
        keyauth_url = f"https://keyauth.win/api/seller/?sellerkey={SELLER_KEY}&type=resetuser&user={license_key}"
        response = requests.get(keyauth_url)
        result = response.json()

        if result.get("success"):
            status = "‚úÖ ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à"
            message = f"‚úÖ ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï HWID ‡∏Ç‡∏≠‡∏á `{license_key}` ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!"
            reset_history[license_key] = now.isoformat()  # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ß‡∏±‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡∏Å‡∏≤‡∏£‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï
            save_reset_history(reset_history)  # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏á‡πÑ‡∏ü‡∏•‡πå
        else:
            status = f"‚ùå ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: {result.get('message', 'Unknown error')}"
            message = f"‚ùå ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: {result.get('message', 'Unknown error')}"

        # ‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° (‡∏•‡∏ö‡πÉ‡∏ô 10 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ)
        msg = await ctx.send(message)
        await msg.delete(delay=10)

        # ‡∏™‡πà‡∏á Log ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î
        log_channel = bot.get_channel(LOG_CHANNEL_ID)
        if log_channel:
            embed = discord.Embed(title="üìã Log ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï HWID", color=0x00ff00)
            embed.add_field(name="üë§ ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô", value=f"{ctx.author.name}#{ctx.author.discriminator} ({ctx.author.id})", inline=False)
            embed.add_field(name="üîë License Key", value=license_key, inline=False)
            embed.add_field(name="üìÖ ‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á", value=discord.utils.format_dt(ctx.message.created_at, style="F"), inline=False)
            embed.add_field(name="üìå ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞", value=status, inline=False)
            await log_channel.send(embed=embed)

    except discord.Forbidden:
        await ctx.send("‚ùå ‡∏ö‡∏≠‡∏ó‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ô‡∏µ‡πâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå", delete_after=10)
    except commands.MissingRole:
        await ctx.send("‚ùå ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ", delete_after=10)
