import os
import json
import discord
from discord.ext import commands
import requests
from datetime import datetime, timedelta
from discord import app_commands
from myserver import server_on

SELLER_KEY = "87c3d5a7a8c98996b2cfb1669355406e"  # ‡πÉ‡∏™‡πà Seller Key ‡∏Ç‡∏≠‡∏á KeyAuth
LOG_CHANNEL_ID = 1346431603982729229  # ID ‡∏Ç‡∏≠‡∏á‡∏ä‡πà‡∏≠‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡πà‡∏á Log
RESET_HISTORY_FILE = "reset_history.json"  # ‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï
UNLIMITED_ROLE_ID = 1083402543989792839  # ID ‡∏Ç‡∏≠‡∏á‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó‡∏ó‡∏µ‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏£‡∏µ‡πÑ‡∏î‡πâ‡πÅ‡∏ö‡∏ö‡πÑ‡∏°‡πà‡∏à‡∏≥‡∏Å‡∏±‡∏î

intents = discord.Intents.default()
intents.message_content = True

bot = commands.Bot(command_prefix="!", intents=intents)


def load_reset_history():
    """‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï HWID ‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå"""
    if os.path.exists(RESET_HISTORY_FILE):
        with open(RESET_HISTORY_FILE, "r", encoding="utf-8") as file:
            return json.load(file)
    return {}


def save_reset_history(data):
    """‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï HWID ‡∏•‡∏á‡πÑ‡∏ü‡∏•‡πå"""
    with open(RESET_HISTORY_FILE, "w", encoding="utf-8") as file:
        json.dump(data, file, indent=4)


@bot.event
async def on_ready():
    print(f"‚úÖ ‡∏ö‡∏≠‡∏ó‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå‡πÅ‡∏•‡πâ‡∏ß: {bot.user}")


### üîπ ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á `!rs` ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÅ‡∏°‡πâ‡∏£‡∏µ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ###
@bot.command()
@commands.has_role("resetkey")
async def rs(ctx, license_key: str):
    """‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á !rs <license_key> ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï HWID ‡∏ú‡πà‡∏≤‡∏ô KeyAuth"""
    try:
        reset_history = load_reset_history()
        now = datetime.utcnow()

        # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏°‡∏µ‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó‡∏ó‡∏µ‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏£‡∏µ‡πÑ‡∏î‡πâ‡πÑ‡∏°‡πà‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
        has_unlimited_role = any(role.id == UNLIMITED_ROLE_ID for role in ctx.author.roles)

        # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ License Key ‡∏ô‡∏µ‡πâ‡πÄ‡∏Ñ‡∏¢‡∏ñ‡∏π‡∏Å‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡πÉ‡∏ô 7 ‡∏ß‡∏±‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà (‡∏¢‡∏Å‡πÄ‡∏ß‡πâ‡∏ô‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏µ Role ‡∏û‡∏¥‡πÄ‡∏®‡∏©)
        if not has_unlimited_role and license_key in reset_history:
            last_reset = datetime.fromisoformat(reset_history[license_key])
            if now - last_reset < timedelta(days=7):
                try:
                    await ctx.message.delete()
                except discord.Forbidden:
                    pass  # ‡∏ñ‡πâ‡∏≤‡∏•‡∏ö‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ó‡∏≥‡∏≠‡∏∞‡πÑ‡∏£‡∏ï‡πà‡∏≠

                await ctx.send(f"‚ùå ‡∏Ñ‡∏µ‡∏¢‡πå `{license_key}` ‡∏ñ‡∏π‡∏Å‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏≠‡∏≠‡∏µ‡∏Å {7 - (now - last_reset).days} ‡∏ß‡∏±‡∏ô", delete_after=10)
                return

        # ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏™‡∏°‡∏≠ ‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏Å‡∏≤‡∏£‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏à‡∏∞‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
        try:
            await ctx.message.delete()
        except discord.Forbidden:
            pass  # ‡∏ñ‡πâ‡∏≤‡∏•‡∏ö‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ó‡∏≥‡∏≠‡∏∞‡πÑ‡∏£‡∏ï‡πà‡∏≠

        # ‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠‡πÑ‡∏õ‡∏¢‡∏±‡∏á KeyAuth API
        keyauth_url = f"https://keyauth.win/api/seller/?sellerkey={SELLER_KEY}&type=resetuser&user={license_key}"
        response = requests.get(keyauth_url)
        result = response.json()

        if result.get("success"):
            message = f"‚úÖ ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï HWID ‡∏Ç‡∏≠‡∏á `{license_key}` ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!"
            reset_history[license_key] = now.isoformat()  # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏ß‡∏•‡∏≤‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï (‡∏¢‡∏Å‡πÄ‡∏ß‡πâ‡∏ô‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏µ Role ‡∏û‡∏¥‡πÄ‡∏®‡∏©)
            if not has_unlimited_role:
                save_reset_history(reset_history)  # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏á‡πÑ‡∏ü‡∏•‡πå‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà Role ‡∏û‡∏¥‡πÄ‡∏®‡∏©
        else:
            message = f"‚ùå ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: {result.get('message', 'Unknown error')}"

        # ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ö‡∏≠‡∏ó ‡πÅ‡∏•‡∏∞‡∏•‡∏ö‡∏´‡∏•‡∏±‡∏á 10 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
        msg = await ctx.send(message)
        await msg.delete(delay=10)
log_channel = bot.get_channel(LOG_CHANNEL_ID)
        if log_channel:
            embed = discord.Embed(title="üìã Log ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï HWID", color=0x00ff00)
            embed.add_field(name="üë§ ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô", value=f"{ctx.author.name}#{ctx.author.discriminator} ({ctx.author.id})", inline=False)
            embed.add_field(name="üîë License Key", value=license_key, inline=False)
            embed.add_field(name="üìÖ ‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á", value=discord.utils.format_dt(ctx.message.created_at, style="F"), inline=False)
            embed.add_field(name="üìå ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞", value=status, inline=False)
            await log_channel.send(embed=embed)
            
    except discord.Forbidden:
        await ctx.send("‚ùå ‡∏ö‡∏≠‡∏ó‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ô‡∏µ‡πâ", delete_after=10)
    except commands.MissingRole:
        await ctx.send("‚ùå ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ", delete_after=10)


server_on()

bot.run(os.getenv('TOKEN'))
